language: php
dist: xenial
os: linux

php:
    - 7.3
    - 7.4
    - 8.0snapshot

cache:
    directories:
        - $HOME/.composer/cache/files

env:
    global:
        - KEY_SERVER="hkp://keyserver.ubuntu.com:80"
        - MONGO_REPO_URI="https://repo.mongodb.org/apt/ubuntu"
        - MONGO_REPO_TYPE="precise/mongodb-org/"
        - SOURCES_LOC="/etc/apt/sources.list.d/mongodb.list"
        - DRIVER_VERSION="stable"
        - SERVER_VERSION="3.6"
        - KEY_ID="2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5"

before_install:
    - echo "extension = mongodb.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
    - composer self-update
    - if [ "$COMPOSER_STABILITY" != "" ]; then composer config minimum-stability $COMPOSER_STABILITY; fi
    - if [ "$SYMFONY_VERSION" != "" ]; then composer require --dev --no-update symfony/messenger=$SYMFONY_VERSION; fi
    - if [ "$SYMFONY_SERIALIZER" != "" ]; then composer remove --dev --no-update kcs/serializer; fi

install: composer update $COMPOSER_FLAGS --prefer-dist --no-progress

script: vendor/bin/phpunit

jobs:
    allow_failures:
        - env: SYMFONY_VERSION='5.x-dev' COMPOSER_STABILITY='dev'
        - env: SYMFONY_VERSION='5.x-dev' COMPOSER_STABILITY='dev' COMPOSER_FLAGS='--ignore-platform-reqs'
        - php: '8.0snapshot'

    include:
        - stage: Test
          php: '7.2'
          env: DB=sqlite
        - stage: Test
          php: '7.3'
          env: DB=sqlite
        - stage: Test
          php: '7.3'
          env: SYMFONY_VERSION='^4.3'
        - stage: Test
          php: '7.3'
          env: SYMFONY_VERSION='^4.4'
        - stage: Test
          php: '7.3'
          env: DB=sqlite SYMFONY_SERIALIZER=1
        - stage: Test
          php: '7.3'
          env: DB=mysql
          services:
            - mysql
        - stage: Test
          php: '7.3'
          env: DB=mariadb
          before_install:
            - travis_apt_get_update
            - sudo apt-get install -y -o Dpkg::Options::='--force-confnew' mariadb-server mariadb-server-10.0 mariadb-client-10.0 mariadb-server-core-10.0
            - sudo systemctl start mysql
            - sudo mysql -u root mysql -e "DROP USER 'root'@'localhost'; CREATE USER 'root'@'%' IDENTIFIED BY ''; GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION; FLUSH PRIVILEGES;"
            - echo "extension = mongodb.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
            - composer self-update
            - if [ "$SYMFONY_VERSION" != "" ]; then composer require --dev --no-update symfony/messenger=$SYMFONY_VERSION; fi
            - if [ "$SYMFONY_SERIALIZER" != "" ]; then composer remove --dev --no-update kcs/serializer; fi
        - stage: Test
          php: '7.3'
          env: DB=postgresql
          services:
            - postgresql
        - stage: Test
          php: '7.3'
          services:
            - mongodb
          before_install:
            - echo "extension = mongodb.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
            - composer self-update
            - if [ "$SYMFONY_VERSION" != "" ]; then composer require --dev --no-update symfony/messenger=$SYMFONY_VERSION; fi
            - if [ "$SYMFONY_SERIALIZER" != "" ]; then composer remove --dev --no-update kcs/serializer; fi
        - stage: Test
          php: '7.3'
          services:
            - mongodb
          env:
            - MONGODB_URI=mongodb://travis:testtest@localhost:27017/
          before_install:
            - echo "extension = mongodb.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
            - composer self-update
            - if [ "$SYMFONY_VERSION" != "" ]; then composer require --dev --no-update symfony/messenger=$SYMFONY_VERSION; fi
            - if [ "$SYMFONY_SERIALIZER" != "" ]; then composer remove --dev --no-update kcs/serializer; fi
          before_script:
            - sleep 15
            - mongo default --eval 'db.createUser({user:"travis",pwd:"testtest",roles:["readWrite"]});'
            - mongo admin --eval 'db.createUser({user:"admin",pwd:"admin",roles:["readWrite"]});'
        - stage: Test
          php: '7.3'
          env: SYMFONY_VERSION='5.x-dev' COMPOSER_STABILITY='dev'
        - stage: Test
          php: '7.4'
          env: SYMFONY_VERSION='5.x-dev' COMPOSER_STABILITY='dev'
        - stage: Test
          php: '8.0snapshot'
          env: SYMFONY_VERSION='5.x-dev' COMPOSER_STABILITY='dev' COMPOSER_FLAGS='--ignore-platform-reqs'
